# Generated by Selenium IDE
import pytest
import time  # Thêm thư viện time để sử dụng sleep
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys

class TestProduct():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.driver.implicitly_wait(10)  # Thời gian chờ ngầm định để tải các phần tử
        self.vars = {}
    
    def teardown_method(self, method):
        self.driver.quit()
    
    def test_product(self):
        self.driver.get("https://nxbkimdong.com.vn/")
        self.driver.set_window_size(974, 969)

        # Tìm kiếm từ khóa "conan"
        self.driver.find_element(By.ID, "searchtext").click()
        time.sleep(1)  # Chờ 1 giây trước khi nhập từ khóa
        self.driver.find_element(By.ID, "searchtext").send_keys("conan")
        time.sleep(1)  # Chờ 1 giây trước khi nhấn ENTER
        self.driver.find_element(By.ID, "searchtext").send_keys(Keys.ENTER)

        # Chọn sản phẩm
        time.sleep(2)  # Chờ 2 giây để kết quả tìm kiếm hiển thị
        self.driver.find_element(By.ID, "1057370946").click()

        # Tăng số lượng sản phẩm
        time.sleep(1)  # Chờ 1 giây để đảm bảo trang sản phẩm được tải
        plus_button = self.driver.find_element(By.CSS_SELECTOR, ".js-qty__adjust--plus > .icon")
        plus_button.click()
        time.sleep(1)  # Chờ 1 giây giữa các lần nhấp
        plus_button.click()

        # Double-click tăng số lượng
        actions = ActionChains(self.driver)
        time.sleep(1)  # Chờ 1 giây trước khi thực hiện double-click
        actions.double_click(plus_button).perform()

        # Kiểm tra tab thông tin sản phẩm
        time.sleep(1)  # Chờ 1 giây để đảm bảo giao diện ổn định
        self.driver.find_element(By.ID, "protab0").click()

        # Lấy nội dung thực tế từ phần tử
        time.sleep(1)  # Chờ 1 giây để thông tin tab được tải
        actual_text = self.driver.find_element(By.CSS_SELECTOR, "#protab0 > p:nth-child(3)").text

        # Chuỗi kỳ vọng với định dạng đúng
        expected_text = (
            "Gosho Aoyama\nXin chào, tôi là Aoyama đây!!\nĐể đáp ứng sự mong đợi của các bạn, "
            "hôm nay chúng ta sẽ nói toàn chuyện về Osaka thôi nhé!\nConan cùng các bạn đã tham quan và ăn rất nhiều món ngon ở Osaka…\n"
            "Chẹp chẹp, cứ nhắc đến là tôi lại thèm được đến đó để lấy tin quá (Hic hic…).\nBiết bao nhiêu là món, nào là mì Udon, "
            "xiên bạch tuộc nướng Takoyaki, bánh xèo\nOkonomiyaki… Rồi cả bánh bao nhân thịt Horai, Tonpeiyaki (gần giống Okonomiyaki) "
            "và cơm cà-ri của nhà hàng Jiyuken nữa chứ! Quên mất, thiếu mất cơm trứng ốp của nhà hàng Meijiken và chè của Meoto Zenzai rồi…"
        )

        # Kiểm tra khớp chuỗi
        assert actual_text == expected_text, f"Expected: {expected_text}, but got: {actual_text}"
